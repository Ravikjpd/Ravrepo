name: Trivy Scan - nginx:1.21

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write      # For pushing commits
  actions: read
  security-events: write  # For uploading SARIF reports
  issues: write        # For creating GitHub issues

jobs:
  trivy-nginx-scan:
    name: Scan nginx:1.21 with Trivy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

    - name: Create reports directory
      run: mkdir -p security-reports

    - name: Set dynamic filename
      run: echo "REPORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Run Trivy scan on nginx:1.21 (JSON + SARIF)
      run: |
        trivy image nginx:1.21 --format json --output security-reports/trivy-report-${REPORT_SHA}.json
        trivy image nginx:1.21 --format sarif --output security-reports/trivy-report-${REPORT_SHA}.sarif

    - name: Commit Trivy reports to repo
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions@github.com"
        git add security-reports/trivy-report-${REPORT_SHA}.*
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Add Trivy scan report for nginx:1.21 - commit ${REPORT_SHA}"
          git push
        fi

    - name: Upload SARIF report to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: security-reports/trivy-report-${{ env.REPORT_SHA }}.sarif

    - name: Ensure labels exist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh label create security --color FF0000 --description "Security issues" || echo "Label 'security' exists"
        gh label create trivy --color 00FF00 --description "Trivy scan issues" || echo "Label 'trivy' exists"

   
    - name: Parse Trivy results and create GitHub Issues
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          # Check if trivy-report-${REPORT_SHA}.json exists and has vulnerabilities
          if [ ! -f trivy-report-${REPORT_SHA}.json ] || [ "$(jq '.Results | length' trivy-report-${REPORT_SHA}.json)" -eq 0 ]; then
            echo "No vulnerabilities found or scan failed."
            exit 0
          fi

          # Parse each vulnerability and create an issue
          jq -r '.Results[].Vulnerabilities[] | select(.Severity == "HIGH" or .Severity == "CRITICAL") | 
            "Title: \(.VulnerabilityID) (\(.Severity))\n\n" +
            "Description: \(.Description)\n" +
            "Package: \(.PkgName)\n" +
            "Installed Version: \(.InstalledVersion)\n" +
            "Fixed Version: \(.FixedVersion // \"None\"))\n" +
            "References: \(.References | join(\"\n\"))"' trivy-results.json | while IFS= read -r issue; do
            title=$(echo "$issue" | grep "Title:" | cut -d ':' -f2- | xargs)
            body=$(echo "$issue" | grep -v "Title:" | xargs -0)
            gh issue create --title "$title" --body "$body" --label "vulnerability"
          done
